plugins {
	id 'fabric-loom' version '1.11-SNAPSHOT'
}

version = "${project.mod_version}+mc${project.minecraft_version}"
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

loom {
	runs {
		datagen {
			inherit server
			name "Data Generation"
			vmArg "-Dfabric-api.datagen"
			vmArg "-Dfabric-api.datagen.output-dir=${file("src/main/generated")}"
			vmArg "-Dfabric-api.datagen.modid=improved-signs"

			runDir "build/datagen"
		}
	}
}

sourceSets {
	main {
		resources {
			srcDirs += [
					'src/main/generated'
			]
		}
	}
}

repositories {
	maven { url 'https://jitpack.io' }
	maven { url = 'https://api.modrinth.com/maven'}
	maven {
        name = "TerraformersMC"
        url = "https://maven.terraformersmc.com/releases/"
    }
}

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"

	include("maven.modrinth:midnightlib:${project.midnightlib_version}")
	modImplementation("maven.modrinth:midnightlib:${project.midnightlib_version}")

	// modRuntimeOnly ("com.terraformersmc:modmenu:${project.modmenu_version}")
}

processResources {
	inputs.property "version", project.mod_version

	filesMatching("fabric.mod.json") {
		expand "version": project.mod_version
	}
}

tasks.withType(JavaCompile) {
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated. 
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	inputs.property "archivesName", project.base.archivesName

	from("LICENSE") {
		rename { "${it}_${inputs.properties.archivesName}"}
	}
}
